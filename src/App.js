import React, { useState, useEffect, useRef } from 'react';
import './App.css';
import AnixLandingPage from "./components/AnixLandingPage";
import god from './images/god.jpg';
import bestie from './images/bestie.jpg';
import vanya from './images/vanya.JPG';
import logo from './images/logo.png';
import sber from './images/sber.png';
import yandex from './images/yandex.png';
import inno from './images/inno.png';
import moscow from './images/moscow.png';
import fiztech from './images/fiztech.png';
import clappy from './images/clappy.png';
import hemoai from './images/hemoai.png';
import kolbox from './images/kolbox.png';
import TPES from './images/TPES.png';


const AnixAILanding = () => {
  const [isLoading, setIsLoading] = useState(true);
  const [currentStep, setCurrentStep] = useState(-1);
  const [counters, setCounters] = useState({ projects: 0, hours: 0 });
  const [showVideoModal, setShowVideoModal] = useState(false);
  const [selectedVideo, setSelectedVideo] = useState(null);
  const [showQRCode, setShowQRCode] = useState(false);
  const [expandedPackage, setExpandedPackage] = useState(null);
  const [activeFAQ, setActiveFAQ] = useState(null);
  const [processInView, setProcessInView] = useState(false);
  const [processStarted, setProcessStarted] = useState(false);
  
  const heroRef = useRef(null);
  const processRef = useRef(null);
  const particlesRef = useRef(null);
  const awardsScrollRef = useRef(null);
  const pricingScrollRef = useRef(null);
  const swipeStart = useRef(0);
  const pricingSwipeStart = useRef(0);
  const [activeService, setActiveService] = useState(null);

  const handleTouchStart = (e) => {
    swipeStart.current = e.touches[0].clientX;
  };

  const handleTouchEnd = (e) => {
    const deltaX = e.changedTouches[0].clientX - swipeStart.current;
    if (deltaX > 50) scrollAwards('left');
    if (deltaX < -50) scrollAwards('right');
  };

  const handleMouseDown = (e) => {
    swipeStart.current = e.clientX;
  };

  const handleMouseUp = (e) => {
    const deltaX = e.clientX - swipeStart.current;
    if (deltaX > 50) scrollAwards('left');
    if (deltaX < -50) scrollAwards('right');
  };

  const handlePricingTouchStart = (e) => {
    pricingSwipeStart.current = e.touches[0].clientX;
  };

  const handlePricingTouchEnd = (e) => {
    const deltaX = e.changedTouches[0].clientX - pricingSwipeStart.current;
    if (deltaX > 50) scrollPricing('left');
    if (deltaX < -50) scrollPricing('right');
  };

  const handlePricingMouseDown = (e) => {
    pricingSwipeStart.current = e.clientX;
  };

  const handlePricingMouseUp = (e) => {
    const deltaX = e.clientX - pricingSwipeStart.current;
    if (deltaX > 50) scrollPricing('left');
    if (deltaX < -50) scrollPricing('right');
  };

  // Animated counter effect
  useEffect(() => {
    const animateCounters = () => {
      const duration = 2000;
      const projectsTarget = 150;
      const hoursTarget = 5000;
      
      const startTime = Date.now();
      
      const updateCounters = () => {
        const elapsed = Date.now() - startTime;
        const progress = Math.min(elapsed / duration, 1);
        
        const easeOut = 1 - Math.pow(1 - progress, 3);
        
        setCounters({
          projects: Math.floor(projectsTarget * easeOut),
          hours: Math.floor(hoursTarget * easeOut)
        });
        
        if (progress < 1) {
          requestAnimationFrame(updateCounters);
        }
      };
      
      updateCounters();
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          animateCounters();
        }
      });
    });

    if (processRef.current) {
      observer.observe(processRef.current);
    }

    return () => observer.disconnect();
  }, []);

  // Enhanced Process Animation System
  useEffect(() => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting && !processStarted) {
          setProcessInView(true);
          setProcessStarted(true);
          
          // Reset and start the animation sequence
          setCurrentStep(-1);
          
          const startProcessAnimation = () => {
            // Initial delay before starting
            setTimeout(() => {
              let stepIndex = 0;
              
              const animateStep = () => {
                if (stepIndex < processSteps.length) {
                  setCurrentStep(stepIndex);
                  stepIndex++;
                  
                  // Longer delay between steps for dramatic effect
                  setTimeout(animateStep, 2000);
                }
              };
              
              animateStep();
            }, 800);
          };
          
          startProcessAnimation();
        }
      });
    }, { threshold: 0.2 });

    if (processRef.current) {
      observer.observe(processRef.current);
    }

    return () => observer.disconnect();
  }, [processStarted]);

  // Neural network particle animation
  useEffect(() => {
    const canvas = particlesRef.current;
    if (!canvas) return;
    
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    
    const particles = [];
    
    class Particle {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.vx = (Math.random() - 0.5) * 0.5;
        this.vy = (Math.random() - 0.5) * 0.5;
        this.size = Math.random() * 3 + 1;
      }
      
      update() {
        this.x += this.vx;
        this.y += this.vy;
        
        if (this.x < 0 || this.x > canvas.width) this.vx *= -1;
        if (this.y < 0 || this.y > canvas.height) this.vy *= -1;
      }
      
      draw() {
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fillStyle = 'rgba(139, 69, 255, 0.8)';
        ctx.fill();
        
        const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size * 3);
        gradient.addColorStop(0, 'rgba(139, 69, 255, 0.6)');
        gradient.addColorStop(1, 'rgba(139, 69, 255, 0)');
        ctx.fillStyle = gradient;
        ctx.fill();
      }
    }
    
    for (let i = 0; i < 80; i++) {
      particles.push(new Particle());
    }
    
    const animate = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      
      particles.forEach(particle => {
        particle.update();
        particle.draw();
      });

      // Draw connection
      for (let i = 0; i < particles.length; i++) {
        for (let j = i + 1; j < particles.length; j++) {
          const dx = particles[i].x - particles[j].x;
          const dy = particles[i].y - particles[j].y;
          const distance = Math.sqrt(dx * dx + dy * dy);
          
          if (distance < 100) {
            ctx.beginPath();
            ctx.moveTo(particles[i].x, particles[i].y);
            ctx.lineTo(particles[j].x, particles[j].y);
            ctx.strokeStyle = `rgba(139, 69, 255, ${1 - distance / 100})`;
            ctx.lineWidth = 0.5;
            ctx.stroke();
          }
        }
      }
      
      requestAnimationFrame(animate);
    };
    
    animate();
    
    const handleResize = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    };
    
    window.addEventListener('resize', handleResize);
    
    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);

  // Process steps with enhanced data
  const processSteps = [
    { 
      title: '–ê–Ω–∞–ª–∏–∑ –°—Ü–µ–Ω–∞—Ä–∏—è', 
      icon: 'üìù', 
      description: '–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –±—Ä–∏—Ñ –∏ —Å–æ–∑–¥–∞–µ—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ', 
      time: '2 —á–∞—Å–∞', 
      saved: '75%', 
      details: ['–û–±—Ä–∞–±–æ—Ç–∫–∞ –±—Ä–∏—Ñ–∞', '–ê–Ω–∞–ª–∏–∑ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è'],
      color: '#8b45ff',
      bgGradient: 'linear-gradient(135deg, #8b45ff, #b465ff)'
    },
    { 
      title: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ö–ª—é—á–µ–≤—ã—Ö –ö–∞–¥—Ä–æ–≤', 
      icon: 'üéØ', 
      description: '–ù–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç –∏–¥–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ –∫–∞–¥—Ä—ã', 
      time: '4 —á–∞—Å–∞', 
      saved: '60%', 
      details: ['–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∫–∞–¥—Ä–æ–≤', '–í–∏–∑—É–∞–ª—å–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ç–∞–π–º–∏–Ω–≥–∞'],
      color: '#20b2aa',
      bgGradient: 'linear-gradient(135deg, #20b2aa, #48cae4)'
    },
    { 
      title: '–ò–ò –ê–Ω–∏–º–∞—Ü–∏—è', 
      icon: 'ü§ñ', 
      description: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ò–ò —Å–æ–∑–¥–∞–µ—Ç –ø–ª–∞–≤–Ω—É—é, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é', 
      time: '1 —á–∞—Å', 
      saved: '90%', 
      details: ['–ù–µ–π—Ä–æ–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥', '–°–∏–Ω—Ç–µ–∑ –¥–≤–∏–∂–µ–Ω–∏—è', '–ü–µ—Ä–µ–Ω–æ—Å —Å—Ç–∏–ª—è'],
      color: '#ff7f50',
      bgGradient: 'linear-gradient(135deg, #ff7f50, #ff9a76)'
    },
    { 
      title: '–£–ª—É—á—à–µ–Ω–∏–µ', 
      icon: '‚ö°', 
      description: '–ò–ò —É–ª—É—á—à–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —à—Ç—Ä–∏—Ö–∏', 
      time: '30 –º–∏–Ω', 
      saved: '85%', 
      details: ['–£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞', '–¶–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—è', '–û–±—Ä–∞–±–æ—Ç–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤'],
      color: '#9d4edd',
      bgGradient: 'linear-gradient(135deg, #9d4edd, #c77dff)'
    },
    { 
      title: '–î–æ—Å—Ç–∞–≤–∫–∞', 
      icon: 'üìä', 
      description: '–§–∏–Ω–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏', 
      time: '15 –º–∏–Ω', 
      saved: '95%', 
      details: ['–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–æ–≤', '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏', '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'],
      color: '#06ffa5',
      bgGradient: 'linear-gradient(135deg, #06ffa5, #39ff14)'
    }
  ];

  const teamMembers = [
    {
      name: '–ê–Ω–¥—Ä–µ–π –¶–∞—Ä—ë–≤',
      role: '–°—Ç—Ä–∞—Ç–µ–≥ –∏ –ø—Ä–æ–¥—é—Å–µ—Ä B2B-–≤–∏–¥–µ–æ',
      benefit: '–ü–æ–Ω–∏–º–∞–µ—Ç —Ä—ã–Ω–æ–∫, –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å—É—Ç—å –≤ –ø—Ä–æ–¥–∞—é—â–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç',
      image: god,
      tags: ['B2B', '–ü—Ä–æ–¥—É–∫—Ç–æ–≤–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', '–î—Ä–∞–º–∞—Ç—É—Ä–≥–∏—è', '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞']
    },
    {
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –°–µ–≤–æ—Å—Ç—å—è–Ω–æ–≤–∞',
      role: '–°—Ü–µ–Ω–∞—Ä–∏—Å—Ç-–ø—Ä–æ–¥–∞–∂–Ω–∏–∫ –∏ —Ä–µ–∂–∏—Å—Å—ë—Ä',
      benefit: '–ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–∂–Ω–æ–µ –≤ —è—Å–Ω—É—é –∏ —Ü–µ–ø–ª—è—é—â—É—é –ø–æ–¥–∞—á—É',
      image: bestie,
      tags: ['B2B-–ø–∏—Ç—á–∏', '–¢–µ–∞—Ç—Ä–∞–ª—å–Ω–∞—è —Ä–µ–∂–∏—Å—Å—É—Ä–∞', '–ü—Ä–æ–¥–∞–∂–Ω—ã–π —Ç–µ–∫—Å—Ç', '–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –±–æ–ª–∏']
    },
    {
      name: '–ò–≤–∞–Ω –ö—É—Ö–∞—Ä—É–∫',
      role: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
      benefit: '–ü—Ä–æ–µ–∫—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∏ —Å–ª–µ–¥–∏—Ç, —á—Ç–æ–±—ã –≤—Å—ë —Ä–∞–±–æ—Ç–∞–ª–æ',
      image: vanya,
      tags: ['–ü—Ä–æ–¥–∂–µ–∫—Ç-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', '–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑', 'AI-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', '–ü—Ä–æ—Ü–µ—Å—Å']
    },
    {
      name: '–î–∞—Ä—å—è –ö–æ—Å–∏—á–∫–∏–Ω–∞',
      role: '–ù–µ–π—Ä–æ–∞–Ω–∏–º–∞—Ç–æ—Ä',
      benefit: '–î–µ–ª–∞–µ—Ç –≤–∏–∑—É–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä—è—Å–Ω—è–µ—Ç –∏ —Ü–µ–ø–ª—è–µ—Ç',
      image: 'https://images.unsplash.com/photo-1544723495-432537deda45',
      tags: ['2D-–∞–Ω–∏–º–∞—Ü–∏—è', '–ú–æ—É—à–Ω-–¥–∏–∑–∞–π–Ω', '–í–∏–∑—É–∞–ª—å–Ω—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã', '–†–∞—Å–∫–∞–¥—Ä–æ–≤–∫–∞']
    },
    {
      name: '–õ–∏–¥–∏—è –°–æ–ª–Ω—ã—à–∫–æ',
      role: '–ù–µ–π—Ä–æ–∞–Ω–∏–º–∞—Ç–æ—Ä',
      benefit: '–°–æ–±–∏—Ä–∞–µ—Ç AI-–≤–∏–¥–µ–æ, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ',
      image: 'https://images.unsplash.com/photo-1529626455594-4ff0802cfb7e',
      tags: ['AI-–≤–∏–¥–µ–æ', '–ü–æ—Å—Ç–ø—Ä–æ–¥–∞–∫—à–Ω', '–ê–ª–≥–æ—Ä–∏—Ç–º—ã', 'Motion pipeline']
    }
  ];

  const testimonials = [
    {
      id: 1,
      name: '–ï–≤–≥–µ–Ω–∏–π –í–æ—Ä–æ–Ω–æ–≤',
      company: 'Kolobox',
      text: 'Anix AI –ø—Ä–µ–æ–±—Ä–∞–∑–∏–ª –Ω–∞—à —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ, –∞ —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è.',
      videoThumbnail: kolbox,
      videoUrl: 'https://player.vimeo.com/video/1078357836?h=a4d72de864',
      aiGenerated: 88
    },
    {
      id: 2,
      name: '–î–º–∏—Ç—Ä–∏–π –∏–∑ –¢–ü–≠–°',
      company: '–¢–ü–≠–°',
      text: 'Anix AI –ø—Ä–µ–æ–±—Ä–∞–∑–∏–ª –Ω–∞—à —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ, –∞ —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è.',
      videoThumbnail: TPES,
      videoUrl: 'https://player.vimeo.com/video/1078354208',
      aiGenerated: 91
    },
    {
      id: 3,
      name: '–¢–∞—Ç—å—è–Ω–∞ –ö—É—Ä–∫–∏–Ω–∞',
      company: 'Clappy',
      text: 'Anix AI –ø—Ä–µ–æ–±—Ä–∞–∑–∏–ª –Ω–∞—à —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ, –∞ —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è.',
      videoThumbnail: clappy,
      videoUrl: 'https://player.vimeo.com/video/1078358379?h=8fc297f159',
      aiGenerated: 85
    },
    {
      id: 4,
      name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ü–æ–ª–∏–∫–µ—Ä',
      company: 'Hemotech AI',
      text: 'Anix AI –ø—Ä–µ–æ–±—Ä–∞–∑–∏–ª –Ω–∞—à —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ, –∞ —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è.',
      videoThumbnail: hemoai,
      videoUrl: 'https://player.vimeo.com/video/1078358021?h=afe067a81f',
      aiGenerated: 95
    }
  ];

  const awards = [
    { 
      title: '–¢–û–ü-25 –ø—Ä–æ–µ–∫—Ç–æ–≤ –∞–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä–∞ 2024', 
      category: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏', 
      year: '2024',
      image: sber
    },
    { 
      title: '–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ –≤ –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥"', 
      category: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', 
      year: '2024',
      image: yandex
    },
    { 
      title: '–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ "–ú–µ–Ω—è—é—â–∏–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å"', 
      category: '–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ', 
      year: '2024',
      image: inno
    },
    { 
      title: '–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ—Ç–æ–∫–∞', 
      category: '–ê–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä', 
      year: '2024',
      image: moscow
    },
    { 
      title: '–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏', 
      category: '–û–±—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è', 
      year: '2023',
      image: fiztech
    }
  ];

  const pricingPackages = {
    '–°—Ç–∞—Ä—Ç–∞–ø—ã': [
      { name: 'Meaty Script', price: '100K‚ÇΩ', details: ['‚ö° 5 –¥–Ω–µ–π –¥–æ—Å—Ç–∞–≤–∫–∞', 'üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ: –ì–æ—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π + —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ + –±—Ä–∏—Ñ + –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã', 'üìù –î–ª—è –∫–æ–≥–æ: –ï—Å—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω, –Ω–æ –Ω–µ—Ç –∏–¥–µ–π –∫–∞–∫ –¥–æ–Ω–µ—Å—Ç–∏ —Å—É—Ç—å'] },
      { name: 'Explain in 30s', price: '250K‚ÇΩ', details: ['‚ö° 7 –¥–Ω–µ–π –¥–æ—Å—Ç–∞–≤–∫–∞', 'üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ: 1 –ø—Ä–æ–¥–∞—é—â–∏–π —Ä–æ–ª–∏–∫ (—Å—Ü–µ–Ω–∞—Ä–∏–π, –∞–Ω–∏–º–∞—Ü–∏—è, –∑–≤—É–∫)', 'üé® –î–ª—è –∫–æ–≥–æ: –ù—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –æ–±—ä—è—Å–Ω–∏—Ç—å "–ö—Ç–æ –≤—ã?" –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤'] },
      { name: 'Content Start', price: '450K‚ÇΩ', details: ['‚ö° 10 –¥–Ω–µ–π –¥–æ—Å—Ç–∞–≤–∫–∞', 'üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ: 3 –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–æ–ª–∏–∫–∞ –¥–ª—è Reels/Shorts', 'üé¨ –î–ª—è –∫–æ–≥–æ: –ù—É–∂–µ–Ω –Ω–µ–¥–æ—Ä–æ–≥–æ–π —Ç–µ—Å—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π'] }
    ],
    '–°—Ä–µ–¥–Ω–∏–π –ë–∏–∑–Ω–µ—Å': [
      { name: 'Full Production', price: '500K‚ÇΩ', details: ['‚ö° 5 –¥–Ω–µ–π –¥–æ—Å—Ç–∞–≤–∫–∞', 'üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ: –ü–æ–ª–Ω—ã–π –ø—Ä–æ–¥–∞–∫—à–µ–Ω + —Å—Ç—Ä–∞—Ç–µ–≥–∏—è + –∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –≤—Å–µ —Å–µ—Ç–∏', 'üé® –î–ª—è –∫–æ–≥–æ: –ù—É–∂–µ–Ω –º–æ—â–Ω—ã–π —Ä–æ–ª–∏–∫ –ø–æ–¥ –ª–∏–¥—ã, –Ω–∞–π–º –∏–ª–∏ –∑–∞–ø—É—Å–∫'] },
      { name: 'Result Series', price: '650K‚ÇΩ', details: ['‚ö° 25 –¥–µ–Ω—å –¥–æ—Å—Ç–∞–≤–∫–∞', 'üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ: 3-5 —Ä–æ–ª–∏–∫–æ–≤ –≤ –µ–¥–∏–Ω–æ–º —Å—Ç–∏–ª–µ + A/B-—Ç–µ—Å—Ç—ã', 'üîÑ –î–ª—è –∫–æ–≥–æ: –ù—É–∂–Ω–æ –≤–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –≤–æ—Ä–æ–Ω–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º'] },
      { name: 'Feed Content', price: '720K‚ÇΩ', details: ['‚ö° —Ä–µ–≥—É–ª—è—Ä–Ω–æ',  'üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ: –ú–µ—Å—è—Ü –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ä–æ–ª–∏–∫–æ–≤/–∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤', 'üì± –î–ª—è –∫–æ–≥–æ: –ù—É–∂–Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å –±–µ–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–π'] }
    ],
    '–ö–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏': [
      { name: 'Content System', price: '1.5M‚ÇΩ', details: ['‚ö° 45 –¥–Ω–µ–π –¥–æ—Å—Ç–∞–≤–∫–∞', 'üéØ  –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ: –°—Ç—Ä–∞—Ç–µ–≥–∏—è + –ø—Ä–æ–¥–∞–∫—à–µ–Ω + –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ + —Ñ–æ–∫—É—Å-–≥—Ä—É–ø–ø—ã', 'üë• –î–ª—è –∫–æ–≥–æ: –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —É—Å—Ç–æ–π—á–∏–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç-–≤–æ—Ä–æ–Ω–∫–∏'] },
      { name: 'In-House Team', price: '5M‚ÇΩ', details: ['‚ö° 90 –¥–Ω–µ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∞', 'üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ: –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –æ—Ç–¥–µ–ª–∞ (–ø–∞–π–ø–ª–∞–π–Ω, —à–∞–±–ª–æ–Ω—ã, –Ω–∞–π–º)', 'üõ†Ô∏è –î–ª—è –∫–æ–≥–æ: –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –ø–æ—Ç–æ–∫–µ –±–µ–∑ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤'] },
      { name: 'Court Viz', price: '1.75M‚ÇΩ', details: ['‚ö° 60 –¥–Ω–µ–π –¥–æ—Å—Ç–∞–≤–∫–∞', 'üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ: –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏, HR-–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è, —Å–µ—Ä–∏–∞–ª—ã, —Å—É–ø–µ—Ä–≤–∞–π–∑–∏–Ω–≥', 'üìã –î–ª—è –∫–æ–≥–æ: –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –±—Ä–µ–Ω–¥–∞, HR, ESG —á–µ—Ä–µ–∑ –∞–Ω–∏–º–∞—Ü–∏—é'] }
    ]
  };

  const faqData = [
    {
      question: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ò–ò-–∞–Ω–∏–º–∞—Ü–∏—è?',
      answer: '–ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö –∫–∞–¥—Ä–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏. –ò–ò –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Å–æ–∑–¥–∞–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ –ø–µ—Ä–µ–¥–∞—é—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.'
    },
    {
      question: '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏?',
      answer: '–ë–ª–∞–≥–æ–¥–∞—Ä—è –ò–ò-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –º—ã —Å–æ–∫—Ä–∞—Ç–∏–ª–∏ –≤—Ä–µ–º—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –Ω–∞ 90%. –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≥–æ—Ç–æ–≤—ã –∑–∞ 5 –¥–Ω–µ–π, —Å–ª–æ–∂–Ω—ã–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è - –∑–∞ 45-90 –¥–Ω–µ–π. –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–Ω—è–ª–∞ –±—ã –≤ 10 —Ä–∞–∑ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏.'
    },
    {
      question: '–ú–æ–∂–Ω–æ –ª–∏ –≤–Ω–æ—Å–∏—Ç—å –ø—Ä–∞–≤–∫–∏ –≤ –≥–æ—Ç–æ–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é?',
      answer: '–î–∞! –ò–ò –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –≤–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –ª—é–±–æ–º —ç—Ç–∞–ø–µ. –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º 3 —Ä–∞—É–Ω–¥–∞ –ø—Ä–∞–≤–æ–∫ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –¥–ª—è –≤—Å–µ—Ö –ø–∞–∫–µ—Ç–æ–≤. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.'
    },
    {
      question: '–ö–∞–∫–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—ã —Å–æ–∑–¥–∞–µ—Ç–µ?',
      answer: '–ú—ã —Å–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –≤–æ –≤—Å–µ—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö: MP4, GIF, WebM –¥–ª—è –≤–µ–±–∞, –≤—ã—Å–æ–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π, –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º.'
    },
    {
      question: '–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ —ç—Ç–æ –¥–ª—è –º–æ–µ–π –æ—Ç—Ä–∞—Å–ª–∏?',
      answer: '–ò–ò-–∞–Ω–∏–º–∞—Ü–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞! –ú—ã —Ä–∞–±–æ—Ç–∞–ª–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏–∑ IT, —Ñ–∏–Ω–∞–Ω—Å–æ–≤, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, e-commerce –∏ –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö —Å—Ñ–µ—Ä. –ò–ò –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –ª—é–±–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏.'
    }
  ];

  const redirectToTelegram = () => {
    window.open('https://t.me/anix_helper', '_blank');
  };

  const generateQRCode = () => {
    return `https://chart.googleapis.com/chart?chs=200x200&cht=qr&chl=https://t.me/anix_helper`;
  };

  const scrollAwards = (direction) => {
    if (awardsScrollRef.current) {
      const container = awardsScrollRef.current;
      const card = container.querySelector('.award-card');
      const cardWidth =
        window.innerWidth <= 768
          ? container.clientWidth
          : (card ? card.offsetWidth + 32 : 300);
      const maxScroll = container.scrollWidth - container.clientWidth;

      if (direction === 'left') {
        if (container.scrollLeft <= 0) {
          container.scrollTo({ left: maxScroll, behavior: 'smooth' });
        } else {
          container.scrollBy({ left: -cardWidth, behavior: 'smooth' });
        }
      } else {
        if (container.scrollLeft >= maxScroll) {
          container.scrollTo({ left: 0, behavior: 'smooth' });
        } else {
          container.scrollBy({ left: cardWidth, behavior: 'smooth' });
        }
      }
    }
  };

  const scrollPricing = (direction) => {
    if (pricingScrollRef.current) {
      const container = pricingScrollRef.current;
      const card = container.querySelector('.pricing-column');
      const cardWidth =
        window.innerWidth <= 768
          ? container.clientWidth
          : (card ? card.offsetWidth + 32 : 400);
      const maxScroll = container.scrollWidth - container.clientWidth;

      if (direction === 'left') {
        if (container.scrollLeft <= 0) {
          container.scrollTo({ left: maxScroll, behavior: 'smooth' });
        } else {
          container.scrollBy({ left: -cardWidth, behavior: 'smooth' });
        }
      } else {
        if (container.scrollLeft >= maxScroll) {
          container.scrollTo({ left: 0, behavior: 'smooth' });
        } else {
          container.scrollBy({ left: cardWidth, behavior: 'smooth' });
        }
      }
    }
  };

  useEffect(() => {
    setTimeout(() => setIsLoading(false), 1500);
  }, []);

  if (isLoading) {
    return (
      <div className="loading-screen">
        <div className="loading-content">
          <div className="neural-loader">
            <div className="neural-pulse"></div>
            <div className="neural-pulse"></div>
            <div className="neural-pulse"></div>
          </div>
          <h2 className="loading-text">–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π...</h2>
        </div>
      </div>
    );
  }

  return (
    <div className="anix-landing">
      {/* Neural Network Particles Background */}
      <canvas ref={particlesRef} className="particles-canvas" />
      
      {/* Hero Section */}
      <section ref={heroRef} className="hero-section">
        <div className="hero-background">
          <img src="https://images.pexels.com/photos/5475810/pexels-photo-5475810.jpeg" alt="–∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–æ–ª–∏–∫ –æ–±—ä—è—Å–Ω—è—é—â–∏–π B2B –ø—Ä–æ–¥—É–∫—Ç" className="hero-bg-image" />
          <div className="hero-overlay"></div>
        </div>
        
        <div className="hero-content">
          <div className="logo-container">
            <img src={logo} alt="–∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–æ–ª–∏–∫ –æ–±—ä—è—Å–Ω—è—é—â–∏–π B2B –ø—Ä–æ–¥—É–∫—Ç" className="anix-logo" />
          </div>
          
          <h1 className="hero-title">
            <span className="title-line">Explainer-–≤–∏–¥–µ–æ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞</span>
            <span className="title-line glow-text">–∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–¥–∞–≤–∞—Ç—å</span>
            <span className="title-line">–∑–∞ 10 –¥–Ω–µ–π</span>
          </h1>
          <p className="hero-subtitle">
            –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π –¥–µ–ª–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ–Ω—è—Ç–Ω–æ–π –∏ –±—ã—Å—Ç—Ä–æ–π.
          </p>
          <button className="cta-button primary" onClick={redirectToTelegram}>
            <span>–°–æ–∑–¥–∞—Ç—å –ò–ò-–ê–Ω–∏–º–∞—Ü–∏—é</span>
            <div className="button-glow"></div>
          </button>
        </div>
        
        <div className="geometric-shapes">
          <div className="floating-shape shape-1"></div>
          <div className="floating-shape shape-2"></div>
          <div className="floating-shape shape-3"></div>
        </div>
      </section>

      {/* Services Section */}
      <section className="services-section">
        <div className="container">
          <h2 className="section-title">–í–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–¥–∞–≤–∞—Ç—å</h2>
          <div className="services-grid">
            <div
              className="service-card"
              onClick={() => setActiveService(activeService === 0 ? null : 0)}
            >
              <div className="service-icon">üé¨</div>
              <h3>–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Ü–∏–∫–ª–∞ —Å–¥–µ–ª–∫–∏</h3>
              <p>–ú–µ–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ —É—Ö–æ–¥–∏—Ç –Ω–∞ –ø—Ä–æ–≥—Ä–µ–≤, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∏ —É–±–µ–∂–¥–µ–Ω–∏–µ.</p>
              <p>"–ú—ã —Ç–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑-–∑–∞ –¥–æ–ª–≥–∏—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏–π –∏ –Ω–µ–¥–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è".</p>
              <div className={`service-overlay ${activeService === 0 ? 'show' : ''}`}>
                <div className="case-study">
                  <h4>–ü—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω–∞—è –ø–æ–±–µ–¥–∞</h4>
                  <p>–ù–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã –≤ —Å—Ä–µ–¥–Ω–µ–º —Å–æ–∫—Ä–∞—Ç–∏–ª–∏ —Ü–∏–∫–ª —Å–¥–µ–ª–∫–∏ –≤ 3 —Ä–∞–∑–∞.</p>
                  <div className="metrics">
                    <span>–î–æ–≤–µ—Ä–∏–µ: +21 –ø—É–Ω–∫—Ç</span>
                    <span>x2 –ú–µ–Ω—å—à–µ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π</span>
                  </div>
                </div>
              </div>
            </div>
            
            <div
              className="service-card"
              onClick={() => setActiveService(activeService === 1 ? null : 1)}
            >
              <div className="service-icon">‚ö°</div>
              <h3>–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ</h3>
              <p>–í–∏–¥–µ–æ –ª–µ–≥–∫–æ —Ç–∏—Ä–∞–∂–∏—Ä—É–µ—Ç—Å—è, —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –Ω–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö, —è–∑—ã–∫–∞—Ö, –ø–∞—Ä—Ç–Ω—ë—Ä–∞—Ö.</p>
              <p>"–•–æ—á—É –≤—ã–π—Ç–∏ –≤ –°–®–ê, –Ω–æ –Ω—É–∂–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–¥ –ª–æ–∫–∞–ª—å".</p>
              <div className={`service-overlay ${activeService === 1 ? 'show' : ''}`}>
                <div className="case-study">
                  <h4>–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞</h4>
                  <p>–û–±—ã—á–Ω–æ –Ω–∞—à –∫–ª–∏–µ–Ω—Ç —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é –≤ –æ—Ç–∫–ª–∏–∫ –æ—Ç 10 —Ä–∞–∑.</p>
                  <div className="metrics">
                    <span>x10 –ü–æ–≤—ã—à–µ–Ω–∏–µ –æ—Ö–≤–∞—Ç–æ–≤</span>
                    <span>+16% –ö–æ–Ω–≤–µ—Ä—Å–∏–π</span>
                  </div>
                </div>
              </div>
            </div>
            
            <div
              className="service-card"
              onClick={() => setActiveService(activeService === 2 ? null : 2)}
            >
              <div className="service-icon">üé®</div>
              <h3>–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –£–ø–∞–∫–æ–≤–∫–∞</h3>
              <p>–ü—Ä–æ–¥—É–∫—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.</p>
              <p>"–ù–∞ —Ñ–æ–Ω–µ –¥—Ä—É–≥–∏—Ö –≤—ã–≥–ª—è–¥–∏–º —Å–∫—É—á–Ω–æ, –Ω–∞—Å –Ω–µ –∑–∞–ø–æ–º–∏–Ω–∞—é—Ç".</p>
              <div className={`service-overlay ${activeService === 2 ? 'show' : ''}`}>
                <div className="case-study">
                  <h4>–í–∞—É —ç—Ñ—Ñ–µ–∫—Ç</h4>
                  <p>–í—ã–¥–µ–ª–∏—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –∏ –ª–µ–Ω–¥–∏–Ω–≥–µ</p>
                  <div className="metrics">
                    <span>–õ–æ—è–ª—å–Ω–æ—Å—Ç—å: +30 –ø—É–Ω–∫—Ç–æ–≤</span>
                    <span>x3 –£–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å –±—Ä–µ–Ω–¥–∞</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
            

      {/* Team Section */}
      <section className="team-section">
        <div className="container">
      <h2 className="section-title">–ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–¥–∞—ë—Ç –≤–º–µ—Å—Ç–æ –≤–∞—Å</h2>
          <div className="team-grid">
            {teamMembers.map((member, index) => (
              <div key={index} className="team-card">
                <div className="team-image-container">
                  <img src={member.image} alt="–∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–æ–ª–∏–∫ –æ–±—ä—è—Å–Ω—è—é—â–∏–π B2B –ø—Ä–æ–¥—É–∫—Ç" className="team-image" />
                  <div className="team-overlay">
                    <div className="expertise-badges">
                      {member.tags.map((tag, i) => (
                        <span key={i} className="expertise-badge">
                          {tag}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
                <div className="team-info">
                  <h3>{member.name}</h3>
                  <p className="role">{member.role}</p>
                  <p className="benefit">{member.benefit}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>




      {/*  üëâ —Å—Ç–∞–≤–∏–º Roadmap –ó–ê –ø—Ä–µ–¥–µ–ª–∞–º–∏ .container */}
      <AnixLandingPage />


      {/* Pricing & Packages Section */}
      <section className="pricing-section">
        <div className="container">
          <h2 className="section-title">–¶–µ–Ω—ã –∏ –ü–∞–∫–µ—Ç—ã</h2>

          <div className="pricing-carousel-container">
            <div
              className="pricing-carousel"
              ref={pricingScrollRef}
              onTouchStart={handlePricingTouchStart}
              onTouchEnd={handlePricingTouchEnd}
              onMouseDown={handlePricingMouseDown}
              onMouseUp={handlePricingMouseUp}
            >
              {Object.entries(pricingPackages).map(([category, packages]) => (
                <div key={category} className="pricing-column">
                <div className="column-header">
                  <h3>{category}</h3>
                  <div className="column-subtitle">
                    {category === '–°—Ç–∞—Ä—Ç–∞–ø—ã' && '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ä–∞—Å—Ç—É—â–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞'}
                    {category === '–°—Ä–µ–¥–Ω–∏–π –ë–∏–∑–Ω–µ—Å' && '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è —É—Å—Ç–æ—è–≤—à–∏—Ö—Å—è –∫–æ–º–ø–∞–Ω–∏–π'}
                    {category === '–ö–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏' && '–†–µ—à–µ–Ω–∏—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è'}
                  </div>
                </div>

                <div className="packages-list">
                  {packages.map((pkg, index) => (
                    <div key={index} className="package-card">
                      <div className="package-header">
                        <h4>{pkg.name}</h4>
                        <div className="package-price">{pkg.price}</div>
                      </div>
                      
                      <button 
                        className="details-button"
                        onClick={() => setExpandedPackage(
                          expandedPackage === `${category}-${index}` ? null : `${category}-${index}`
                        )}
                      >
                        –ü–æ–¥—Ä–æ–±–Ω–µ–µ {expandedPackage === `${category}-${index}` ? '‚àí' : '+'}
                      </button>
                      
                      <div className={`package-details ${expandedPackage === `${category}-${index}` ? 'expanded' : ''}`}>
                        <div className="details-content">
                          {pkg.details.map((detail, i) => (
                            <div key={i} className="detail-item">{detail}</div>
                          ))}
                        </div>
                      </div>
                      
                      <button className="package-cta" onClick={redirectToTelegram}>
                        –ù–∞—á–∞—Ç—å
                      </button>
                    </div>
                  ))}
                </div>
              </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Testimonials */}
      <section className="testimonials-section">
        <div className="container">
          <h2 className="section-title">–ò—Å—Ç–æ—Ä–∏–∏ –£—Å–ø–µ—Ö–∞ –ö–ª–∏–µ–Ω—Ç–æ–≤</h2>
          <div className="testimonials-grid">
            {testimonials.map((testimonial) => (
              <div key={testimonial.id} className="testimonial-card">
                <div className="video-preview" onClick={() => {
                  setSelectedVideo(testimonial);
                  setShowVideoModal(true);
                }}>
                  <img src={testimonial.videoThumbnail} alt="–∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–æ–ª–∏–∫ –æ–±—ä—è—Å–Ω—è—é—â–∏–π B2B –ø—Ä–æ–¥—É–∫—Ç" />
                  <div className="video-play-button">
                    <div className="play-icon">‚ñ∂</div>
                  </div>
                  <div className="ai-indicator">
                    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ò–ò: {testimonial.aiGenerated}%
                  </div>
                </div>
                <div className="testimonial-content">
                  <p>"{testimonial.text}"</p>
                  <div className="testimonial-author">
                    <strong>{testimonial.name}</strong>
                    <span>{testimonial.company}</span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Enhanced Awards Section */}
      <section className="awards-section">
        <div className="container">
          <h2 className="section-title">–ü—Ä–∏–∑–Ω–∞–Ω–∏–µ –ò–Ω–¥—É—Å—Ç—Ä–∏–∏</h2>
          
          <div className="awards-scroll-container">
            <button className="scroll-button left" onClick={() => scrollAwards('left')}>
              ‚óÄ
            </button>
            
            <div
              className="awards-scroll"
              ref={awardsScrollRef}
              onTouchStart={handleTouchStart}
              onTouchEnd={handleTouchEnd}
              onMouseDown={handleMouseDown}
              onMouseUp={handleMouseUp}
            >
              {awards.map((award, index) => (
                <div key={index} className="award-card">
                  <div className="award-trophy">
                    <img src={award.image} alt="–∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–æ–ª–∏–∫ –æ–±—ä—è—Å–Ω—è—é—â–∏–π B2B –ø—Ä–æ–¥—É–∫—Ç" />
                    <div className="trophy-glow"></div>
                  </div>
                  <div className="award-info">
                    <h3>{award.title}</h3>
                    <p className="award-category">{award.category}</p>
                    <span className="award-year">{award.year}</span>
                  </div>
                </div>
              ))}
            </div>
            
            <button className="scroll-button right" onClick={() => scrollAwards('right')}>
              ‚ñ∂
            </button>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="faq-section">
        <div className="container">
          <h2 className="section-title">–ß–∞—Å—Ç–æ –ó–∞–¥–∞–≤–∞–µ–º—ã–µ –í–æ–ø—Ä–æ—Å—ã</h2>
          <div className="faq-list">
            {faqData.map((faq, index) => (
              <div key={index} className="faq-item">
                <button 
                  className={`faq-question ${activeFAQ === index ? 'active' : ''}`}
                  onClick={() => setActiveFAQ(activeFAQ === index ? null : index)}
                >
                  <span>{faq.question}</span>
                  <div className="faq-icon">{activeFAQ === index ? '‚àí' : '+'}</div>
                </button>
                <div className={`faq-answer ${activeFAQ === index ? 'expanded' : ''}`}>
                  <div className="faq-answer-content">
                    <p>{faq.answer}</p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Contact Section */}
      <section className="contact-section">
        <div className="container">
          <h2 className="section-title">–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ù–∞–º–∏</h2>
          <div className="contact-grid">
            <div className="contact-info">
              <h3>–ì–æ—Ç–æ–≤—ã —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à—É –∞–Ω–∏–º–∞—Ü–∏—é?</h3>
              <p>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º. –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞!</p>
              
              <div className="contact-methods">
                <div className="contact-method">
                  <div className="contact-icon">üìû</div>
                  <div className="contact-details">
                    <strong>–¢–µ–ª–µ—Ñ–æ–Ω</strong>
                    <a href="tel:+79770890309">+7(977)-089-03-09</a>
                  </div>
                </div>
                
                <div className="contact-method">
                  <div className="contact-icon">‚úâÔ∏è</div>
                  <div className="contact-details">
                    <strong>Email</strong>
                    <a href="mailto:anix.ai@yandex.ru">anix.ai@yandex.ru</a>
                  </div>
                </div>
                
                <div className="contact-method">
                  <div className="contact-icon">‚úàÔ∏è</div>
                  <div className="contact-details">
                    <strong>Telegram</strong>
                    <a href="https://t.me/anix_helper" target="_blank" rel="noopener noreferrer">@anix_helper</a>
                  </div>
                </div>
              </div>
            </div>
            
            <div className="contact-visual">
              <div className="contact-animation">
                <div className="floating-elements">
                  <div className="element element-1">üé¨</div>
                  <div className="element element-2">ü§ñ</div>
                  <div className="element element-3">‚ö°</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Blog Section */}
      <section className="blog-section">
        <div className="container">
          <h2 className="section-title">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ù–æ–≤–æ—Å—Ç–∏</h2>
          <div className="blog-grid">
            <article className="blog-card">
              <div className="blog-category">
                <span className="category-tag">#–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏–ê–Ω–∏–º–∞—Ü–∏–∏</span>
              </div>
              <h3>–ë—É–¥—É—â–µ–µ –ò–ò-–∞–Ω–∏–º–∞—Ü–∏–∏: –ù–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ –ø—Ä–æ—Ç–∏–≤ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤</h3>
              <p>–ò—Å—Å–ª–µ–¥—É–µ–º, –∫–∞–∫ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–∏–∑–∏—Ä—É—é—Ç –∏–Ω–¥—É—Å—Ç—Ä–∏—é –∞–Ω–∏–º–∞—Ü–∏–∏...</p>
              <div className="blog-meta">
                <span>5 –º–∏–Ω —á—Ç–µ–Ω–∏—è</span>
                <span>–î–µ–∫ 2024</span>
              </div>
            </article>
            
            <article className="blog-card">
              <div className="blog-category">
                <span className="category-tag">#–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏–ê–Ω–∏–º–∞—Ü–∏–∏</span>
              </div>
              <h3>–ö–µ–π—Å: –ö–∞–∫ –º—ã —Å–æ–∫—Ä–∞—Ç–∏–ª–∏ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–∞ 90%</h3>
              <p>–ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –Ω–∞—à–µ–≥–æ –ò–ò-–∫–æ–Ω–≤–µ–π–µ—Ä–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...</p>
              <div className="blog-meta">
                <span>8 –º–∏–Ω —á—Ç–µ–Ω–∏—è</span>
                <span>–ù–æ—è 2024</span>
              </div>
            </article>
          </div>
        </div>
      </section>

      {/* Floating Telegram Button */}
      <div 
        className="floating-telegram"
        onMouseEnter={() => setShowQRCode(true)}
        onMouseLeave={() => setShowQRCode(false)}
        onClick={redirectToTelegram}
      >
        <div className="telegram-icon">‚úà</div>
        <span>–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram</span>
        <div className="telegram-glow"></div>
        
        {showQRCode && (
          <div className="qr-modal">
            <img src={generateQRCode()} alt="–∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–æ–ª–∏–∫ –æ–±—ä—è—Å–Ω—è—é—â–∏–π B2B –ø—Ä–æ–¥—É–∫—Ç" />
            <p>–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ –¥–ª—è —Å–≤—è–∑–∏</p>
          </div>
        )}
      </div>

      {/* Video Modal */}
      {showVideoModal && (
        <div className="video-modal-overlay" onClick={() => setShowVideoModal(false)}>
          <div className="video-modal" onClick={(e) => e.stopPropagation()}>
            <button className="modal-close" onClick={() => setShowVideoModal(false)}>√ó</button>
            {selectedVideo && (
              <div className="modal-content">
                <iframe
                  src={selectedVideo.videoUrl}
                  width="100%"
                  height="400"
                  frameBorder="0"
                  allow="autoplay; fullscreen; picture-in-picture"
                  allowFullScreen
                  title={`–í–∏–¥–µ–æ –æ—Ç ${selectedVideo.name}`}
                ></iframe>
                <div className="progress-bar-container">
                  <div className="progress-label">–ö–æ–Ω—Ç–µ–Ω—Ç, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ò–ò</div>
                  <div className="progress-bar">
                    <div 
                      className="progress-fill" 
                      style={{width: `${selectedVideo.aiGenerated}%`}}
                    ></div>
                  </div>
                  <div className="progress-percentage">{selectedVideo.aiGenerated}%</div>
                </div>
                <div className="modal-info">
                  <h3>{selectedVideo.name}</h3>
                  <p>{selectedVideo.company}</p>
                  <p>"{selectedVideo.text}"</p>
                </div>
              </div>
            )}
          </div>
        </div>
      )}
    </div>
  );
};

export default AnixAILanding;
